name: "Build Hyprland x86_64 Glibc"

on:
  # push:
  #   branches:
      # - test
      # - main
  workflow_dispatch:

env:
  REPO_OWNER: "${{ github.repository_owner }}"
  REPO_NAME: "${{ github.event.repository.name }}"
  PACKAGES_FILE: "packages.tar.gz"

jobs:
  build:
    name: Build Hyprland
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/void-linux/void-buildroot-${{ matrix.config.libc }}:20240526R1
      options: --platform ${{ matrix.config.platform }}
      env:
        PATH: "/usr/libexec/chroot-git:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin:/usr/local/bin:/tmp/bin"
        ARCH: "${{ matrix.config.arch }}"
        BOOTSTRAP: "${{ matrix.config.host }}"
        TEST: "${{ matrix.config.test }}"
        HOSTREPO: /hostrepo

    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              arch: x86_64,
              host: x86_64,
              libc: glibc,
              platform: linux/amd64,
              test: 1,
            }

    steps:
      - name: Prepare container
        run: |
          mkdir -p /etc/xbps.d && cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
          ls -la
          sed -i 's|repo-default|repo-ci|g' /etc/xbps.d/*-repository-*.conf
          xbps-install -Syu || xbps-install -yu xbps
          xbps-install -y tar curl

      - name: Clone Void-Packages and prepare
        run: |
          cd ~
          git clone --depth 1 https://github.com/void-linux/void-packages.git

      - name: Clone Hyprland-Void repo and prepare
        run: |
          git clone https://github.com/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}.git
          cd ${{ env.REPO_NAME }}
          cat common/shlibs >> ~/void-packages/common/shlibs
          cp -r srcpkgs/* ~/void-packages/srcpkgs

      - name: Create hostrepo and prepare masterdir
        run: |
          cd ~/void-packages
          ln -s "$(pwd)" /hostrepo &&
          common/travis/set_mirror.sh &&
          common/travis/prepare.sh &&
          common/travis/fetch-xtools.sh

      # - name: Build Swayosd
      #   run: (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg swayosd)

      # - name: Build tomlplusplus
      #   run: (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg tomlplusplus)

      # - name: Build sdbus-cpp
      #   run: (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg sdbus-cpp)

      # - name: Build hyprutils
      #   run: (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg hyprutils)

      # - name: Build hyprlang
      #   run: (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg hyprlang)

      # - name: Build hyprland
      #   run: (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg hyprland)

      # - name: Build hyprland-protocols
      #   run: (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg hyprland-protocols)

      # - name: Build xdg-desktop-portal-hyprland
      #   run: (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg xdg-desktop-portal-hyprland)

      # - name: Build hyprcursor
      #   run: (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg hyprcursor)

      # - name: Build hyprwayland-scanner
      #   run: (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg hyprwayland-scanner)

      # - name: Build hypridle
      #   run: (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg hypridle)

      # - name: Build hyprlock
      #   run: (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg hyprlock)

      # - name: Build hyprpaper
      #   run: (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg hyprpaper)

      - name: Copy relevant packages to new directory to be packaged
        run: |
          mkdir ~/packages
          # cp ~/hostdir/binpkgs/hypr*.xbps ~/packages
          # cp ~/hostdir/binpkgs/xdg-desktop-portal-hyprland*.xbps ~/packages
          # cp ~/hostdir/binpkgs/sdbus-cpp*.xbps ~/packages
          # cp ~/hostdir/binpkgs/tomlplusplus*.xbps ~/packages
          # cp ~/hostdir/binpkgs/sway*.xbps ~/packages
          cp ~/hostdir/binpkgs/zen-browser*.xbps ~/packages
          cd ~/packages
          xbps-rindex -a *

      - name: Retrieve private key
        run: |
          cd ~
          curl -O https://raw.githubusercontent.com/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}/main/common/private.pem

      - name: Sign repository
        run: |
          export XBPS_PASSPHRASE=${{ secrets.PRIVATE_PEM_PASSPHRASE }}
          xbps-rindex --privkey ~/private.pem --sign --signedby "${{ env.REPO_NAME }}-github-action" ~/packages
          xbps-rindex --privkey ~/private.pem --sign-pkg ~/packages/*.xbps

      - name: Compress Packages
        run: |
          cd ~/packages
          ls -la
          tar -czvf ${{ env.PACKAGES_FILE }} *

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REPO_NAME }}
          path: ~/packages/${{ env.PACKAGES_FILE }}

  # publish:
  #   name: Pack and Publish
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: ${{ env.REPO_NAME }}
  #         path: ~/

  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Configure Git
  #       run: |
  #         git config user.name "github-actions[bot]"
  #         git config user.email "github-actions[bot]@users.noreply.github.com"

  #     - name: Update or Create Repository Branch
  #       run: |
  #         if git ls-remote --exit-code --heads origin repository-x86_64-glibc; then
  #           echo "Branch exists, deleting it"
  #           git push origin -d repository-x86_64-glibc
  #         else
  #           echo "Branch does not exist, will create new"
  #         fi
  #         git switch --orphan repository-x86_64-glibc

  #     - name: Extract and Add Packages
  #       run: |
  #         tar -xvf ~/${{ env.PACKAGES_FILE }} -C ./

  #     - name: Commit and Push Changes
  #       run: |
  #         git add -A
  #         git commit -m "Upload latest packages to repository"
  #         git push origin repository-x86_64-glibc