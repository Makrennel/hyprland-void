name: "Build Hyprland x86_64 Glibc"

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  REPO_OWNER: "${{ github.repository_owner }}"
  REPO_NAME: "${{ github.event.repository.name }}"
  ARCH_NAME: "x86_64-glibc"
  BUILD_ARGS: ""

jobs:
  build:
    name: Build Hyprland
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/void-linux/void-${{ matrix.config.libc }}-full:20250227R1
      options: --platform ${{ matrix.config.platform }} --privileged
      env:
        ARCH: "${{ matrix.config.arch }}"
        BOOTSTRAP: "${{ matrix.config.host }}"
        TEST: "${{ matrix.config.test }}"

    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              arch: x86_64,
              host: x86_64,
              libc: glibc,
              platform: linux/amd64,
              test: 1,
            }

    steps:
      - name: Prepare container and create a non-root user
        run: |
          mkdir -p /etc/xbps.d && cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
          sed -i 's|repo-default|repo-ci|g' /etc/xbps.d/*-repository-*.conf
          xbps-install -Syu xbps && xbps-install -yu && xbps-install -y sudo bash grep curl git
          useradd -G xbuilder -M builder

      - name: Clone Void-Packages
        run: |
          mkdir /work && cd /work
          git clone --depth 1 https://github.com/void-linux/void-packages.git

      - name: Clone Hyprland-Void repo and prepare
        run: |
          cd /work
          git clone https://github.com/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}.git
          cd ${{ env.REPO_NAME }}
          cat common/shlibs >> /work/void-packages/common/shlibs
          cp -r srcpkgs/* /work/void-packages/srcpkgs

      - name: Prepare masterdir
        run: |
          chown -R builder:builder /work
          cd /work/void-packages
          sudo -Eu builder common/travis/set_mirror.sh &&
          sudo -Eu builder common/travis/prepare.sh &&
          common/travis/fetch-xtools.sh

      - name: Export envs
        run: |
          echo "BUILD_ARGS=${{ env.BUILD_ARGS }}" >> "$GITHUB_ENV"
          echo "SCRIPT_DIR=/work/${{ env.REPO_NAME }}/scripts" >> "$GITHUB_ENV"

      # All declared individually for logging purposes
      # Common Deps
      # - name: Build tomlplusplus
      #   run: PACKAGE=tomlplusplus $SCRIPT_DIR/build-package

      # - name: Build sdbus-cpp
      #   run: PACKAGE=sdbus-cpp $SCRIPT_DIR/build-package

      # # Normal Builds
      # - name: Build hyprutils
      #   run: PACKAGE=hyprutils $SCRIPT_DIR/build-package

      # - name: Build hyprlang
      #   run: PACKAGE=hyprlang $SCRIPT_DIR/build-package

      # - name: Build hyprcursor
      #   run: PACKAGE=hyprcursor $SCRIPT_DIR/build-package

      # - name: Build hyprwayland-scanner
      #   run: PACKAGE=hyprwayland-scanner $SCRIPT_DIR/build-package

      # - name: Build aquamarine
      #   run: PACKAGE=aquamarine $SCRIPT_DIR/build-package

      # - name: Build hyprland
      #   run: PACKAGE=hyprland $SCRIPT_DIR/build-package

      # - name: Build hyprland-protocols
      #   run: PACKAGE=hyprland-protocols $SCRIPT_DIR/build-package

      # - name: Build xdg-desktop-portal-hyprland
      #   run: PACKAGE=xdg-desktop-portal-hyprland $SCRIPT_DIR/build-package

      # - name: Build hypridle
      #   run: PACKAGE=hypridle $SCRIPT_DIR/build-package

      # - name: Build hyprlock
      #   run: PACKAGE=hyprlock $SCRIPT_DIR/build-package

      # - name: Build hyprpaper
      #   run: PACKAGE=hyprpaper $SCRIPT_DIR/build-package
      
      - name: Build zen-browser
        run: PACKAGE=zen-browser $SCRIPT_DIR/build-package

      # Sometimes xbps-src builds a bunch of other junk I don't want to be liable for distributing
      - name: Copy relevant packages to new directory for indexing
        run: sudo -Eu builder $SCRIPT_DIR/index-packages

      # Retrieve the signing key from the separate private repository
      - name: Retrieve private key
        run: |
          cd ~
          curl -O https://raw.githubusercontent.com/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}/master/common/private.pem

      - name: Sign repository
        run: |
          export XBPS_PASSPHRASE=${{ secrets.PRIVATE_PEM_PASSPHRASE }}
          xbps-rindex --privkey ~/private.pem --sign --signedby "${{ env.REPO_NAME }}-github-action" ~/packages
          xbps-rindex --privkey ~/private.pem --sign-pkg ~/packages/*.xbps
      

      - name: Compress Packages
        run: |
          cd ~/packages
          ls -la
          tar -czvf ${{ env.PACKAGES_FILE }} *
    
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REPO_NAME }}
          path: ~/packages/${{ env.PACKAGES_FILE }}