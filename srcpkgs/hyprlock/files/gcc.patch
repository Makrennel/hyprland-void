diff --git a/CMakeLists.txt b/CMakeLists.txt
index d1cec67..cdf8e50 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -70,6 +70,7 @@ message(STATUS "Checking deps...")
 
 find_package(Threads REQUIRED)
 find_package(PkgConfig REQUIRED)
+find_package(fmt REQUIRED)
 find_package(OpenGL REQUIRED COMPONENTS EGL GLES3)
 find_package(hyprwayland-scanner 0.4.4 REQUIRED)
 pkg_check_modules(
@@ -96,7 +97,7 @@ pkg_check_modules(
 file(GLOB_RECURSE SRCFILES CONFIGURE_DEPENDS "src/*.cpp")
 add_executable(hyprlock ${SRCFILES})
 target_link_libraries(hyprlock PRIVATE pam rt Threads::Threads PkgConfig::deps
-                                       OpenGL::EGL OpenGL::GLES3)
+                                       OpenGL::EGL OpenGL::GLES3 fmt::fmt)
 
 # protocols
 pkg_get_variable(WAYLAND_PROTOCOLS_DIR wayland-protocols pkgdatadir)
diff --git a/src/helpers/Log.hpp b/src/helpers/Log.hpp
index 00770da..ec6e68d 100644
--- a/src/helpers/Log.hpp
+++ b/src/helpers/Log.hpp
@@ -1,7 +1,7 @@
 #pragma once
 #include <format>
 #include <string>
-#include <print>
+#include <fmt/core.h>
 
 enum eLogLevel {
     TRACE = 0,
@@ -48,7 +48,7 @@ namespace Debug {
             return;
 
         if (level != NONE) {
-            std::println("[{}] {}", logLevelString(level), std::vformat(fmt, std::make_format_args(args...)));
+            fmt::print("[{}] {}", logLevelString(level), std::vformat(fmt, std::make_format_args(args...)));
         }
     }
 };
\ No newline at end of file
diff --git a/src/main.cpp b/src/main.cpp
index ff2bcbc..da5436c 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -5,9 +5,10 @@
 #include "core/AnimationManager.hpp"
 #include <cstddef>
 #include <string_view>
+#include <fmt/core.h>
 
 void help() {
-    std::println("Usage: hyprlock [options]\n\n"
+    fmt::print("Usage: hyprlock [options]\n\n"
                  "Options:\n"
                  "  -v, --verbose            - Enable verbose logging\n"
                  "  -q, --quiet              - Disable logging\n"
@@ -24,7 +25,7 @@ std::optional<std::string> parseArg(const std::vector<std::string>& args, const
     if (i + 1 < args.size()) {
         return args[++i];
     } else {
-        std::println(stderr, "Error: Missing value for {} option.", flag);
+        fmt::print(stderr, "Error: Missing value for {} option.", flag);
         return std::nullopt;
     }
 }
@@ -49,9 +50,9 @@ int main(int argc, char** argv, char** envp) {
         if (arg == "--version" || arg == "-V") {
             constexpr bool ISTAGGEDRELEASE = std::string_view(HYPRLOCK_COMMIT) == HYPRLOCK_VERSION_COMMIT;
             if (ISTAGGEDRELEASE)
-                std::println("Hyprlock version v{}", HYPRLOCK_VERSION);
+                fmt::print("Hyprlock version v{}", HYPRLOCK_VERSION);
             else
-                std::println("Hyprlock version v{} (commit {})", HYPRLOCK_VERSION, HYPRLOCK_COMMIT);
+                fmt::print("Hyprlock version v{} (commit {})", HYPRLOCK_VERSION, HYPRLOCK_COMMIT);
 
             return 0;
         }
@@ -84,7 +85,7 @@ int main(int argc, char** argv, char** envp) {
             noFadeIn = true;
 
         else {
-            std::println(stderr, "Unknown option: {}", arg);
+            fmt::print(stderr, "Unknown option: {}", arg);
             help();
             return 1;
         }
