# Template file for 'hyprland'
pkgname=hyprland
version=0.47.2
revision=1
build_style=cmake
configure_args=" --no-warn-unused-cli -DCMAKE_BUILD_TYPE=Release -DNO_SYSTEMD=ON"
hostmakedepends="cmake pkg-config autoconf git cpio glslang jq make ninja"
makedepends="
	hyprgraphics
	hyprcursor-devel
	hyprutils-devel
	aquamarine-devel
	hyprlang-devel
	hyprland-protocols
	hyprwayland-scanner
	libtoml++-devel
	abseil-cpp-devel
	hwids
	cairo-devel
	libdisplay-info-devel
	libdrm-devel
	libgbm-devel
	libglvnd-devel
	libinput-devel
	libliftoff-devel
	libseat-devel
	libxcb-devel
	libXcursor-devel
	libxkbcommon-devel
	pango-devel
	wayland-devel
	wayland-protocols
	xorg-server-xwayland
	udis86-devel
	re2-devel
	xcb-util-errors-devel
	xcb-util-renderutil-devel
	xcb-util-wm-devel
	xcb-util-image-devel
	xorg-server-xwayland
"
depends="
	hyprlang
	hyprwayland-scanner
	hyprgraphics
	hyprutils
	hyprcursor
	cairo
	glslang
	libliftoff
	libxcb
	libXfixes
	polkit
	vulkan-loader
	Vulkan-ValidationLayers
	wayland
	wayland-protocols
	xcb-proto
	xcb-util
	xcb-util-keysyms
	xorg-server-xwayland
	re2
"
short_desc="Dynamic tiling Wayland compositor that doesn't sacrifice on its looks"
maintainer="Makrennel <makrommel@protonmail.ch>"
license="BSD-3-Clause"
homepage="https://hyprland.org/"
changelog="https://github.com/hyprwm/Hyprland/releases"
distfiles="https://github.com/hyprwm/Hyprland/releases/download/v${version}/source-v${version}.tar.gz"
checksum="e7f4447c9e24149cf2fd57057410bc90cb3c4ecaa35b6ec2a60a9d44d2fb2feb"

build_options="clang gcc"
build_options_default="gcc"
desc_option_clang="Use clang to build"
desc_option_gcc="Use gcc to build"

if [ "$build_option_gcc" ]; then
	hostmakedepends+=" gcc"
	makedepends+=" libgcc-devel fmt-devel"
fi

if [ "$build_option_clang" ]; then
	hostmakedepends+=" clang19"
	makedepends+=" libcxx libcxx-devel libcxxabi libcxxabi-devel"
fi

if [ "$XBPS_TARGET_LIBC" = "glibc" ]; then
	makedepends+=" glaze"
fi

if [ "$XBPS_TARGET_LIBC" = "musl" ]; then
	configure_args+=" -DCMAKE_CXX_FLAGS=\"-lexecinfo\""
	makedepends+=" libexecinfo-devel"
	depends+=" libexecinfo"
fi

_apply_patch() {
	local args="$1" pname="$(basename $2)"

	if [ ! -f ".${pname}_done" ]; then
		patch -N $args -i $2
		touch .${pname}_done
	fi
}

pre_configure() {
	_apply_patch -p1 ${FILESDIR}/version.patch

	if [ "$build_option_gcc" ]; then
		_apply_patch -p1 ${FILESDIR}/gcc.patch
	fi

	if [ "$build_option_clang" ]; then
		export CC=clang
		export CXX=clang++

		configure_args+=" -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_CXX_STANDARD=23 -DCMAKE_CXX_STANDARD_REQUIRED=ON -DCMAKE_CXX_FLAGS=-stdlib=libc++"
	fi
}

post_install() {
	vlicense LICENSE
}
